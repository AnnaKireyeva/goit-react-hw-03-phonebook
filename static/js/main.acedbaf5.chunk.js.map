{"version":3,"sources":["Components/ContactsList/ContactList.module.css","Components/AddContactForm/AddContactForm.module.css","Components/ContactsItem/ContactsItem.module.css","Components/AddContactForm/AddContactForm.js","Components/Filter/Filter.js","Components/ContactsItem/ContactsItem.js","Components/ContactsList/ContactList.js","App.js","index.js","Components/Filter/Filter.module.css"],"names":["module","exports","AddContactForm","state","name","number","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","reset","this","className","styles","form","autoComplete","label","input","type","pattern","title","required","onChange","button","Component","Filter","onChangeFilter","filterWrapper","filterLabel","filterInput","ContactsItem","id","onDeleteContact","contactsItem","contactWrapper","contactName","contactNumber","onClick","deleteBtn","ContactList","filteredContacts","contactList","map","contact","App","contacts","filter","addContact","newContact","shortid","generate","find","toLowerCase","alert","prevState","changeFilter","filterContacts","normalizedFilter","includes","deleteContact","contactId","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.acedbaf5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1cm8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddContactForm_form__1jB38\",\"label\":\"AddContactForm_label__2w0qk\",\"input\":\"AddContactForm_input__20lbF\",\"button\":\"AddContactForm_button__2K90b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsItem\":\"ContactsItem_contactsItem__25Ggv\",\"contactWrapper\":\"ContactsItem_contactWrapper__1anJk\",\"contactName\":\"ContactsItem_contactName__17Rc9\",\"contactNumber\":\"ContactsItem_contactNumber__3dmN5\",\"deleteBtn\":\"ContactsItem_deleteBtn__iw-Le\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './AddContactForm.module.css';\r\n\r\nclass AddContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.handleSubmit}\r\n        className={styles.form}\r\n        autoComplete=\"off\"\r\n      >\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Number\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={styles.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nAddContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default AddContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <div className={styles.filterWrapper}>\r\n      <label className={styles.filterLabel}>\r\n        Find contacts by name\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChangeFilter}\r\n          className={styles.filterInput}\r\n        ></input>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChangeFilter: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactsItem.module.css';\r\n\r\nconst ContactsItem = ({ id, name, number, onDeleteContact }) => {\r\n  return (\r\n    <li className={styles.contactsItem}>\r\n      <div className={styles.contactWrapper}>\r\n        <p className={styles.contactName}>{name}:</p>\r\n        <p className={styles.contactNumber}>{number}</p>\r\n      </div>\r\n\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => onDeleteContact(id)}\r\n        className={styles.deleteBtn}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\nContactsItem.propTypes = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactsItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\nimport ContactsItem from '../ContactsItem/ContactsItem';\r\n\r\nconst ContactList = ({ filteredContacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={styles.contactList}>\r\n      {filteredContacts.map(contact => (\r\n        <ContactsItem\r\n          key={contact.id}\r\n          id={contact.id}\r\n          name={contact.name}\r\n          number={contact.number}\r\n          onDeleteContact={() => onDeleteContact(contact.id)}\r\n        ></ContactsItem>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {  \r\n  filteredContacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport './App.css';\n\nimport AddContactForm from './Components/AddContactForm';\nimport Filter from './Components/Filter/Filter';\nimport ContactList from './Components/ContactsList/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = newContact => {\n    const contact = {\n      id: shortid.generate(),\n      name: newContact.name,\n      number: newContact.number,\n    };\n\n    if (\n      this.state.contacts.find(\n        contact => contact.name.toLowerCase() === newContact.name.toLowerCase(),\n      )\n    ) {\n      alert(newContact.name + ' is already in contacts');\n      return;\n    }\n\n    this.setState(prevState => ({\n      contacts: [contact, ...prevState.contacts],\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  filterContacts = () => {\n    const normalizedFilter = this.state.filter.toLowerCase();\n    return this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const filteredContacts = this.filterContacts();\n    return (\n      <div className=\"App\">\n        <h1 className=\"Title\">Phonebook</h1>\n        <AddContactForm onSubmit={this.addContact} />\n\n        <h2 className=\"Title\">Contacts</h2>\n        <Filter value={this.state.filter} onChangeFilter={this.changeFilter} />\n\n        <ContactList\n          filteredContacts={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__2r0V_\",\"filterLabel\":\"Filter_filterLabel__2fips\",\"filterInput\":\"Filter_filterInput__1Jag8\"};"],"sourceRoot":""}